// Code generated by go-swagger; DO NOT EDIT.

package customer_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/newbilling-client-go/models"
)

// CustomerManagerRefundCustomerResourceReader is a Reader for the CustomerManagerRefundCustomerResource structure.
type CustomerManagerRefundCustomerResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerManagerRefundCustomerResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerManagerRefundCustomerResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerManagerRefundCustomerResourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerManagerRefundCustomerResourceOK creates a CustomerManagerRefundCustomerResourceOK with default headers values
func NewCustomerManagerRefundCustomerResourceOK() *CustomerManagerRefundCustomerResourceOK {
	return &CustomerManagerRefundCustomerResourceOK{}
}

/*
CustomerManagerRefundCustomerResourceOK describes a response with status code 200, with default header values.

A successful response.
*/
type CustomerManagerRefundCustomerResourceOK struct {
	Payload *models.NewbillingRefundCustomerResourceResponse
}

// IsSuccess returns true when this customer manager refund customer resource o k response has a 2xx status code
func (o *CustomerManagerRefundCustomerResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer manager refund customer resource o k response has a 3xx status code
func (o *CustomerManagerRefundCustomerResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer manager refund customer resource o k response has a 4xx status code
func (o *CustomerManagerRefundCustomerResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer manager refund customer resource o k response has a 5xx status code
func (o *CustomerManagerRefundCustomerResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer manager refund customer resource o k response a status code equal to that given
func (o *CustomerManagerRefundCustomerResourceOK) IsCode(code int) bool {
	return code == 200
}

func (o *CustomerManagerRefundCustomerResourceOK) Error() string {
	return fmt.Sprintf("[POST /v1/customer/resource/refund][%d] customerManagerRefundCustomerResourceOK  %+v", 200, o.Payload)
}

func (o *CustomerManagerRefundCustomerResourceOK) String() string {
	return fmt.Sprintf("[POST /v1/customer/resource/refund][%d] customerManagerRefundCustomerResourceOK  %+v", 200, o.Payload)
}

func (o *CustomerManagerRefundCustomerResourceOK) GetPayload() *models.NewbillingRefundCustomerResourceResponse {
	return o.Payload
}

func (o *CustomerManagerRefundCustomerResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NewbillingRefundCustomerResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerManagerRefundCustomerResourceDefault creates a CustomerManagerRefundCustomerResourceDefault with default headers values
func NewCustomerManagerRefundCustomerResourceDefault(code int) *CustomerManagerRefundCustomerResourceDefault {
	return &CustomerManagerRefundCustomerResourceDefault{
		_statusCode: code,
	}
}

/*
CustomerManagerRefundCustomerResourceDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type CustomerManagerRefundCustomerResourceDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the customer manager refund customer resource default response
func (o *CustomerManagerRefundCustomerResourceDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this customer manager refund customer resource default response has a 2xx status code
func (o *CustomerManagerRefundCustomerResourceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer manager refund customer resource default response has a 3xx status code
func (o *CustomerManagerRefundCustomerResourceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer manager refund customer resource default response has a 4xx status code
func (o *CustomerManagerRefundCustomerResourceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer manager refund customer resource default response has a 5xx status code
func (o *CustomerManagerRefundCustomerResourceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer manager refund customer resource default response a status code equal to that given
func (o *CustomerManagerRefundCustomerResourceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CustomerManagerRefundCustomerResourceDefault) Error() string {
	return fmt.Sprintf("[POST /v1/customer/resource/refund][%d] CustomerManager_RefundCustomerResource default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerManagerRefundCustomerResourceDefault) String() string {
	return fmt.Sprintf("[POST /v1/customer/resource/refund][%d] CustomerManager_RefundCustomerResource default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerManagerRefundCustomerResourceDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *CustomerManagerRefundCustomerResourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
