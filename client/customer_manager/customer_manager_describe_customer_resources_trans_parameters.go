// Code generated by go-swagger; DO NOT EDIT.

package customer_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerManagerDescribeCustomerResourcesTransParams creates a new CustomerManagerDescribeCustomerResourcesTransParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerManagerDescribeCustomerResourcesTransParams() *CustomerManagerDescribeCustomerResourcesTransParams {
	return &CustomerManagerDescribeCustomerResourcesTransParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerManagerDescribeCustomerResourcesTransParamsWithTimeout creates a new CustomerManagerDescribeCustomerResourcesTransParams object
// with the ability to set a timeout on a request.
func NewCustomerManagerDescribeCustomerResourcesTransParamsWithTimeout(timeout time.Duration) *CustomerManagerDescribeCustomerResourcesTransParams {
	return &CustomerManagerDescribeCustomerResourcesTransParams{
		timeout: timeout,
	}
}

// NewCustomerManagerDescribeCustomerResourcesTransParamsWithContext creates a new CustomerManagerDescribeCustomerResourcesTransParams object
// with the ability to set a context for a request.
func NewCustomerManagerDescribeCustomerResourcesTransParamsWithContext(ctx context.Context) *CustomerManagerDescribeCustomerResourcesTransParams {
	return &CustomerManagerDescribeCustomerResourcesTransParams{
		Context: ctx,
	}
}

// NewCustomerManagerDescribeCustomerResourcesTransParamsWithHTTPClient creates a new CustomerManagerDescribeCustomerResourcesTransParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerManagerDescribeCustomerResourcesTransParamsWithHTTPClient(client *http.Client) *CustomerManagerDescribeCustomerResourcesTransParams {
	return &CustomerManagerDescribeCustomerResourcesTransParams{
		HTTPClient: client,
	}
}

/*
CustomerManagerDescribeCustomerResourcesTransParams contains all the parameters to send to the API endpoint

	for the customer manager describe customer resources trans operation.

	Typically these are written to a http.Request.
*/
type CustomerManagerDescribeCustomerResourcesTransParams struct {

	// AttrID.
	AttrID []string

	/* CrID.

	   资源包ID.
	*/
	CrID []string

	// CustomerID.
	CustomerID []string

	/* Limit.

	   数据库查询每页大小 - 默认 20, 最大值 200.

	   Format: uint64
	*/
	Limit *string

	// MaxTime.
	//
	// Format: date-time
	MaxTime *strfmt.DateTime

	// MinTime.
	//
	// Format: date-time
	MinTime *strfmt.DateTime

	/* Offset.

	   数据库查询偏移位置 - 默认 0.

	   Format: uint64
	*/
	Offset *string

	// OrderID.
	OrderID []string

	/* Reverse.

	   是否倒序排序 - value = 0 sort ASC, value = 1 sort DESC.
	*/
	Reverse *bool

	/* SearchWord.

	   模糊查询关键字 - 支持字段：attr_name.
	*/
	SearchWord *string

	/* SortKey.

	   排序字段 - 默认 create_time.
	*/
	SortKey *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer manager describe customer resources trans params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithDefaults() *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer manager describe customer resources trans params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithTimeout(timeout time.Duration) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithContext(ctx context.Context) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithHTTPClient(client *http.Client) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttrID adds the attrID to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithAttrID(attrID []string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetAttrID(attrID)
	return o
}

// SetAttrID adds the attrId to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetAttrID(attrID []string) {
	o.AttrID = attrID
}

// WithCrID adds the crID to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithCrID(crID []string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetCrID(crID)
	return o
}

// SetCrID adds the crId to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetCrID(crID []string) {
	o.CrID = crID
}

// WithCustomerID adds the customerID to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithCustomerID(customerID []string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetCustomerID(customerID []string) {
	o.CustomerID = customerID
}

// WithLimit adds the limit to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithLimit(limit *string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetLimit(limit *string) {
	o.Limit = limit
}

// WithMaxTime adds the maxTime to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithMaxTime(maxTime *strfmt.DateTime) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetMaxTime(maxTime)
	return o
}

// SetMaxTime adds the maxTime to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetMaxTime(maxTime *strfmt.DateTime) {
	o.MaxTime = maxTime
}

// WithMinTime adds the minTime to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithMinTime(minTime *strfmt.DateTime) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetMinTime(minTime)
	return o
}

// SetMinTime adds the minTime to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetMinTime(minTime *strfmt.DateTime) {
	o.MinTime = minTime
}

// WithOffset adds the offset to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithOffset(offset *string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetOffset(offset *string) {
	o.Offset = offset
}

// WithOrderID adds the orderID to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithOrderID(orderID []string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetOrderID(orderID)
	return o
}

// SetOrderID adds the orderId to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetOrderID(orderID []string) {
	o.OrderID = orderID
}

// WithReverse adds the reverse to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithReverse(reverse *bool) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetReverse(reverse)
	return o
}

// SetReverse adds the reverse to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetReverse(reverse *bool) {
	o.Reverse = reverse
}

// WithSearchWord adds the searchWord to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithSearchWord(searchWord *string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetSearchWord(searchWord)
	return o
}

// SetSearchWord adds the searchWord to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetSearchWord(searchWord *string) {
	o.SearchWord = searchWord
}

// WithSortKey adds the sortKey to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WithSortKey(sortKey *string) *CustomerManagerDescribeCustomerResourcesTransParams {
	o.SetSortKey(sortKey)
	return o
}

// SetSortKey adds the sortKey to the customer manager describe customer resources trans params
func (o *CustomerManagerDescribeCustomerResourcesTransParams) SetSortKey(sortKey *string) {
	o.SortKey = sortKey
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerManagerDescribeCustomerResourcesTransParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AttrID != nil {

		// binding items for attr_id
		joinedAttrID := o.bindParamAttrID(reg)

		// query array param attr_id
		if err := r.SetQueryParam("attr_id", joinedAttrID...); err != nil {
			return err
		}
	}

	if o.CrID != nil {

		// binding items for cr_id
		joinedCrID := o.bindParamCrID(reg)

		// query array param cr_id
		if err := r.SetQueryParam("cr_id", joinedCrID...); err != nil {
			return err
		}
	}

	if o.CustomerID != nil {

		// binding items for customer_id
		joinedCustomerID := o.bindParamCustomerID(reg)

		// query array param customer_id
		if err := r.SetQueryParam("customer_id", joinedCustomerID...); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit string

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := qrLimit
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.MaxTime != nil {

		// query param max_time
		var qrMaxTime strfmt.DateTime

		if o.MaxTime != nil {
			qrMaxTime = *o.MaxTime
		}
		qMaxTime := qrMaxTime.String()
		if qMaxTime != "" {

			if err := r.SetQueryParam("max_time", qMaxTime); err != nil {
				return err
			}
		}
	}

	if o.MinTime != nil {

		// query param min_time
		var qrMinTime strfmt.DateTime

		if o.MinTime != nil {
			qrMinTime = *o.MinTime
		}
		qMinTime := qrMinTime.String()
		if qMinTime != "" {

			if err := r.SetQueryParam("min_time", qMinTime); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset string

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := qrOffset
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.OrderID != nil {

		// binding items for order_id
		joinedOrderID := o.bindParamOrderID(reg)

		// query array param order_id
		if err := r.SetQueryParam("order_id", joinedOrderID...); err != nil {
			return err
		}
	}

	if o.Reverse != nil {

		// query param reverse
		var qrReverse bool

		if o.Reverse != nil {
			qrReverse = *o.Reverse
		}
		qReverse := swag.FormatBool(qrReverse)
		if qReverse != "" {

			if err := r.SetQueryParam("reverse", qReverse); err != nil {
				return err
			}
		}
	}

	if o.SearchWord != nil {

		// query param search_word
		var qrSearchWord string

		if o.SearchWord != nil {
			qrSearchWord = *o.SearchWord
		}
		qSearchWord := qrSearchWord
		if qSearchWord != "" {

			if err := r.SetQueryParam("search_word", qSearchWord); err != nil {
				return err
			}
		}
	}

	if o.SortKey != nil {

		// query param sort_key
		var qrSortKey string

		if o.SortKey != nil {
			qrSortKey = *o.SortKey
		}
		qSortKey := qrSortKey
		if qSortKey != "" {

			if err := r.SetQueryParam("sort_key", qSortKey); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamCustomerManagerDescribeCustomerResourcesTrans binds the parameter attr_id
func (o *CustomerManagerDescribeCustomerResourcesTransParams) bindParamAttrID(formats strfmt.Registry) []string {
	attrIDIR := o.AttrID

	var attrIDIC []string
	for _, attrIDIIR := range attrIDIR { // explode []string

		attrIDIIV := attrIDIIR // string as string
		attrIDIC = append(attrIDIC, attrIDIIV)
	}

	// items.CollectionFormat: "multi"
	attrIDIS := swag.JoinByFormat(attrIDIC, "multi")

	return attrIDIS
}

// bindParamCustomerManagerDescribeCustomerResourcesTrans binds the parameter cr_id
func (o *CustomerManagerDescribeCustomerResourcesTransParams) bindParamCrID(formats strfmt.Registry) []string {
	crIDIR := o.CrID

	var crIDIC []string
	for _, crIDIIR := range crIDIR { // explode []string

		crIDIIV := crIDIIR // string as string
		crIDIC = append(crIDIC, crIDIIV)
	}

	// items.CollectionFormat: "multi"
	crIDIS := swag.JoinByFormat(crIDIC, "multi")

	return crIDIS
}

// bindParamCustomerManagerDescribeCustomerResourcesTrans binds the parameter customer_id
func (o *CustomerManagerDescribeCustomerResourcesTransParams) bindParamCustomerID(formats strfmt.Registry) []string {
	customerIDIR := o.CustomerID

	var customerIDIC []string
	for _, customerIDIIR := range customerIDIR { // explode []string

		customerIDIIV := customerIDIIR // string as string
		customerIDIC = append(customerIDIC, customerIDIIV)
	}

	// items.CollectionFormat: "multi"
	customerIDIS := swag.JoinByFormat(customerIDIC, "multi")

	return customerIDIS
}

// bindParamCustomerManagerDescribeCustomerResourcesTrans binds the parameter order_id
func (o *CustomerManagerDescribeCustomerResourcesTransParams) bindParamOrderID(formats strfmt.Registry) []string {
	orderIDIR := o.OrderID

	var orderIDIC []string
	for _, orderIDIIR := range orderIDIR { // explode []string

		orderIDIIV := orderIDIIR // string as string
		orderIDIC = append(orderIDIC, orderIDIIV)
	}

	// items.CollectionFormat: "multi"
	orderIDIS := swag.JoinByFormat(orderIDIC, "multi")

	return orderIDIS
}
