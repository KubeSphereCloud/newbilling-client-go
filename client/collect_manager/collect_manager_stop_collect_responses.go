// Code generated by go-swagger; DO NOT EDIT.

package collect_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/newbilling-client-go/models"
)

// CollectManagerStopCollectReader is a Reader for the CollectManagerStopCollect structure.
type CollectManagerStopCollectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CollectManagerStopCollectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCollectManagerStopCollectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCollectManagerStopCollectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCollectManagerStopCollectOK creates a CollectManagerStopCollectOK with default headers values
func NewCollectManagerStopCollectOK() *CollectManagerStopCollectOK {
	return &CollectManagerStopCollectOK{}
}

/*
CollectManagerStopCollectOK describes a response with status code 200, with default header values.

A successful response.
*/
type CollectManagerStopCollectOK struct {
	Payload models.NewbillingStopCollectResponse
}

// IsSuccess returns true when this collect manager stop collect o k response has a 2xx status code
func (o *CollectManagerStopCollectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this collect manager stop collect o k response has a 3xx status code
func (o *CollectManagerStopCollectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this collect manager stop collect o k response has a 4xx status code
func (o *CollectManagerStopCollectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this collect manager stop collect o k response has a 5xx status code
func (o *CollectManagerStopCollectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this collect manager stop collect o k response a status code equal to that given
func (o *CollectManagerStopCollectOK) IsCode(code int) bool {
	return code == 200
}

func (o *CollectManagerStopCollectOK) Error() string {
	return fmt.Sprintf("[POST /v1/collect:stop][%d] collectManagerStopCollectOK  %+v", 200, o.Payload)
}

func (o *CollectManagerStopCollectOK) String() string {
	return fmt.Sprintf("[POST /v1/collect:stop][%d] collectManagerStopCollectOK  %+v", 200, o.Payload)
}

func (o *CollectManagerStopCollectOK) GetPayload() models.NewbillingStopCollectResponse {
	return o.Payload
}

func (o *CollectManagerStopCollectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectManagerStopCollectDefault creates a CollectManagerStopCollectDefault with default headers values
func NewCollectManagerStopCollectDefault(code int) *CollectManagerStopCollectDefault {
	return &CollectManagerStopCollectDefault{
		_statusCode: code,
	}
}

/*
CollectManagerStopCollectDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type CollectManagerStopCollectDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the collect manager stop collect default response
func (o *CollectManagerStopCollectDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this collect manager stop collect default response has a 2xx status code
func (o *CollectManagerStopCollectDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this collect manager stop collect default response has a 3xx status code
func (o *CollectManagerStopCollectDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this collect manager stop collect default response has a 4xx status code
func (o *CollectManagerStopCollectDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this collect manager stop collect default response has a 5xx status code
func (o *CollectManagerStopCollectDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this collect manager stop collect default response a status code equal to that given
func (o *CollectManagerStopCollectDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CollectManagerStopCollectDefault) Error() string {
	return fmt.Sprintf("[POST /v1/collect:stop][%d] CollectManager_StopCollect default  %+v", o._statusCode, o.Payload)
}

func (o *CollectManagerStopCollectDefault) String() string {
	return fmt.Sprintf("[POST /v1/collect:stop][%d] CollectManager_StopCollect default  %+v", o._statusCode, o.Payload)
}

func (o *CollectManagerStopCollectDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *CollectManagerStopCollectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
