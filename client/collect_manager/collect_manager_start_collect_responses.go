// Code generated by go-swagger; DO NOT EDIT.

package collect_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/newbilling-client-go/models"
)

// CollectManagerStartCollectReader is a Reader for the CollectManagerStartCollect structure.
type CollectManagerStartCollectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CollectManagerStartCollectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCollectManagerStartCollectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCollectManagerStartCollectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCollectManagerStartCollectOK creates a CollectManagerStartCollectOK with default headers values
func NewCollectManagerStartCollectOK() *CollectManagerStartCollectOK {
	return &CollectManagerStartCollectOK{}
}

/*
CollectManagerStartCollectOK describes a response with status code 200, with default header values.

A successful response.
*/
type CollectManagerStartCollectOK struct {
	Payload models.NewbillingStartCollectResponse
}

// IsSuccess returns true when this collect manager start collect o k response has a 2xx status code
func (o *CollectManagerStartCollectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this collect manager start collect o k response has a 3xx status code
func (o *CollectManagerStartCollectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this collect manager start collect o k response has a 4xx status code
func (o *CollectManagerStartCollectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this collect manager start collect o k response has a 5xx status code
func (o *CollectManagerStartCollectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this collect manager start collect o k response a status code equal to that given
func (o *CollectManagerStartCollectOK) IsCode(code int) bool {
	return code == 200
}

func (o *CollectManagerStartCollectOK) Error() string {
	return fmt.Sprintf("[POST /v1/collect:start][%d] collectManagerStartCollectOK  %+v", 200, o.Payload)
}

func (o *CollectManagerStartCollectOK) String() string {
	return fmt.Sprintf("[POST /v1/collect:start][%d] collectManagerStartCollectOK  %+v", 200, o.Payload)
}

func (o *CollectManagerStartCollectOK) GetPayload() models.NewbillingStartCollectResponse {
	return o.Payload
}

func (o *CollectManagerStartCollectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectManagerStartCollectDefault creates a CollectManagerStartCollectDefault with default headers values
func NewCollectManagerStartCollectDefault(code int) *CollectManagerStartCollectDefault {
	return &CollectManagerStartCollectDefault{
		_statusCode: code,
	}
}

/*
CollectManagerStartCollectDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type CollectManagerStartCollectDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the collect manager start collect default response
func (o *CollectManagerStartCollectDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this collect manager start collect default response has a 2xx status code
func (o *CollectManagerStartCollectDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this collect manager start collect default response has a 3xx status code
func (o *CollectManagerStartCollectDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this collect manager start collect default response has a 4xx status code
func (o *CollectManagerStartCollectDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this collect manager start collect default response has a 5xx status code
func (o *CollectManagerStartCollectDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this collect manager start collect default response a status code equal to that given
func (o *CollectManagerStartCollectDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CollectManagerStartCollectDefault) Error() string {
	return fmt.Sprintf("[POST /v1/collect:start][%d] CollectManager_StartCollect default  %+v", o._statusCode, o.Payload)
}

func (o *CollectManagerStartCollectDefault) String() string {
	return fmt.Sprintf("[POST /v1/collect:start][%d] CollectManager_StartCollect default  %+v", o._statusCode, o.Payload)
}

func (o *CollectManagerStartCollectDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *CollectManagerStartCollectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
