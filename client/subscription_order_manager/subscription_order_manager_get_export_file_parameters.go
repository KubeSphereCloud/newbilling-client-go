// Code generated by go-swagger; DO NOT EDIT.

package subscription_order_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSubscriptionOrderManagerGetExportFileParams creates a new SubscriptionOrderManagerGetExportFileParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSubscriptionOrderManagerGetExportFileParams() *SubscriptionOrderManagerGetExportFileParams {
	return &SubscriptionOrderManagerGetExportFileParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSubscriptionOrderManagerGetExportFileParamsWithTimeout creates a new SubscriptionOrderManagerGetExportFileParams object
// with the ability to set a timeout on a request.
func NewSubscriptionOrderManagerGetExportFileParamsWithTimeout(timeout time.Duration) *SubscriptionOrderManagerGetExportFileParams {
	return &SubscriptionOrderManagerGetExportFileParams{
		timeout: timeout,
	}
}

// NewSubscriptionOrderManagerGetExportFileParamsWithContext creates a new SubscriptionOrderManagerGetExportFileParams object
// with the ability to set a context for a request.
func NewSubscriptionOrderManagerGetExportFileParamsWithContext(ctx context.Context) *SubscriptionOrderManagerGetExportFileParams {
	return &SubscriptionOrderManagerGetExportFileParams{
		Context: ctx,
	}
}

// NewSubscriptionOrderManagerGetExportFileParamsWithHTTPClient creates a new SubscriptionOrderManagerGetExportFileParams object
// with the ability to set a custom HTTPClient for a request.
func NewSubscriptionOrderManagerGetExportFileParamsWithHTTPClient(client *http.Client) *SubscriptionOrderManagerGetExportFileParams {
	return &SubscriptionOrderManagerGetExportFileParams{
		HTTPClient: client,
	}
}

/*
SubscriptionOrderManagerGetExportFileParams contains all the parameters to send to the API endpoint

	for the subscription order manager get export file operation.

	Typically these are written to a http.Request.
*/
type SubscriptionOrderManagerGetExportFileParams struct {

	// FileName.
	FileName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the subscription order manager get export file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SubscriptionOrderManagerGetExportFileParams) WithDefaults() *SubscriptionOrderManagerGetExportFileParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the subscription order manager get export file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SubscriptionOrderManagerGetExportFileParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) WithTimeout(timeout time.Duration) *SubscriptionOrderManagerGetExportFileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) WithContext(ctx context.Context) *SubscriptionOrderManagerGetExportFileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) WithHTTPClient(client *http.Client) *SubscriptionOrderManagerGetExportFileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFileName adds the fileName to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) WithFileName(fileName *string) *SubscriptionOrderManagerGetExportFileParams {
	o.SetFileName(fileName)
	return o
}

// SetFileName adds the fileName to the subscription order manager get export file params
func (o *SubscriptionOrderManagerGetExportFileParams) SetFileName(fileName *string) {
	o.FileName = fileName
}

// WriteToRequest writes these params to a swagger request
func (o *SubscriptionOrderManagerGetExportFileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FileName != nil {

		// query param file_name
		var qrFileName string

		if o.FileName != nil {
			qrFileName = *o.FileName
		}
		qFileName := qrFileName
		if qFileName != "" {

			if err := r.SetQueryParam("file_name", qFileName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
