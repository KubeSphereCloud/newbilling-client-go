// Code generated by go-swagger; DO NOT EDIT.

package pricing_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPricingManagerPricingExportParams creates a new PricingManagerPricingExportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPricingManagerPricingExportParams() *PricingManagerPricingExportParams {
	return &PricingManagerPricingExportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPricingManagerPricingExportParamsWithTimeout creates a new PricingManagerPricingExportParams object
// with the ability to set a timeout on a request.
func NewPricingManagerPricingExportParamsWithTimeout(timeout time.Duration) *PricingManagerPricingExportParams {
	return &PricingManagerPricingExportParams{
		timeout: timeout,
	}
}

// NewPricingManagerPricingExportParamsWithContext creates a new PricingManagerPricingExportParams object
// with the ability to set a context for a request.
func NewPricingManagerPricingExportParamsWithContext(ctx context.Context) *PricingManagerPricingExportParams {
	return &PricingManagerPricingExportParams{
		Context: ctx,
	}
}

// NewPricingManagerPricingExportParamsWithHTTPClient creates a new PricingManagerPricingExportParams object
// with the ability to set a custom HTTPClient for a request.
func NewPricingManagerPricingExportParamsWithHTTPClient(client *http.Client) *PricingManagerPricingExportParams {
	return &PricingManagerPricingExportParams{
		HTTPClient: client,
	}
}

/*
PricingManagerPricingExportParams contains all the parameters to send to the API endpoint

	for the pricing manager pricing export operation.

	Typically these are written to a http.Request.
*/
type PricingManagerPricingExportParams struct {

	/* RelatedCode.

	   导出相关code 包括产品、分类、计费方案、计费项、策略、属性、条件、true=导出相关code,false=不导出相关code.
	*/
	RelatedCode *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pricing manager pricing export params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingManagerPricingExportParams) WithDefaults() *PricingManagerPricingExportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pricing manager pricing export params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingManagerPricingExportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) WithTimeout(timeout time.Duration) *PricingManagerPricingExportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) WithContext(ctx context.Context) *PricingManagerPricingExportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) WithHTTPClient(client *http.Client) *PricingManagerPricingExportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRelatedCode adds the relatedCode to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) WithRelatedCode(relatedCode *bool) *PricingManagerPricingExportParams {
	o.SetRelatedCode(relatedCode)
	return o
}

// SetRelatedCode adds the relatedCode to the pricing manager pricing export params
func (o *PricingManagerPricingExportParams) SetRelatedCode(relatedCode *bool) {
	o.RelatedCode = relatedCode
}

// WriteToRequest writes these params to a swagger request
func (o *PricingManagerPricingExportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RelatedCode != nil {

		// query param related_code
		var qrRelatedCode bool

		if o.RelatedCode != nil {
			qrRelatedCode = *o.RelatedCode
		}
		qRelatedCode := swag.FormatBool(qrRelatedCode)
		if qRelatedCode != "" {

			if err := r.SetQueryParam("related_code", qRelatedCode); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
