// Code generated by go-swagger; DO NOT EDIT.

package pricing_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPricingManagerDescribePublicAttributesParams creates a new PricingManagerDescribePublicAttributesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPricingManagerDescribePublicAttributesParams() *PricingManagerDescribePublicAttributesParams {
	return &PricingManagerDescribePublicAttributesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPricingManagerDescribePublicAttributesParamsWithTimeout creates a new PricingManagerDescribePublicAttributesParams object
// with the ability to set a timeout on a request.
func NewPricingManagerDescribePublicAttributesParamsWithTimeout(timeout time.Duration) *PricingManagerDescribePublicAttributesParams {
	return &PricingManagerDescribePublicAttributesParams{
		timeout: timeout,
	}
}

// NewPricingManagerDescribePublicAttributesParamsWithContext creates a new PricingManagerDescribePublicAttributesParams object
// with the ability to set a context for a request.
func NewPricingManagerDescribePublicAttributesParamsWithContext(ctx context.Context) *PricingManagerDescribePublicAttributesParams {
	return &PricingManagerDescribePublicAttributesParams{
		Context: ctx,
	}
}

// NewPricingManagerDescribePublicAttributesParamsWithHTTPClient creates a new PricingManagerDescribePublicAttributesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPricingManagerDescribePublicAttributesParamsWithHTTPClient(client *http.Client) *PricingManagerDescribePublicAttributesParams {
	return &PricingManagerDescribePublicAttributesParams{
		HTTPClient: client,
	}
}

/*
PricingManagerDescribePublicAttributesParams contains all the parameters to send to the API endpoint

	for the pricing manager describe public attributes operation.

	Typically these are written to a http.Request.
*/
type PricingManagerDescribePublicAttributesParams struct {

	// BillingMode.
	BillingMode []string

	// Description.
	Description []string

	// IsNeedMeter.
	IsNeedMeter []int64

	// Limit.
	//
	// Format: uint64
	Limit *string

	// Name.
	Name []string

	// Offset.
	//
	// Format: uint64
	Offset *string

	// PublicAttrID.
	PublicAttrID []string

	// Reverse.
	Reverse *bool

	// SearchWord.
	SearchWord *string

	// SortKey.
	SortKey *string

	// Unit.
	Unit []string

	// ValueType.
	ValueType []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pricing manager describe public attributes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingManagerDescribePublicAttributesParams) WithDefaults() *PricingManagerDescribePublicAttributesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pricing manager describe public attributes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingManagerDescribePublicAttributesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithTimeout(timeout time.Duration) *PricingManagerDescribePublicAttributesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithContext(ctx context.Context) *PricingManagerDescribePublicAttributesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithHTTPClient(client *http.Client) *PricingManagerDescribePublicAttributesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBillingMode adds the billingMode to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithBillingMode(billingMode []string) *PricingManagerDescribePublicAttributesParams {
	o.SetBillingMode(billingMode)
	return o
}

// SetBillingMode adds the billingMode to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetBillingMode(billingMode []string) {
	o.BillingMode = billingMode
}

// WithDescription adds the description to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithDescription(description []string) *PricingManagerDescribePublicAttributesParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetDescription(description []string) {
	o.Description = description
}

// WithIsNeedMeter adds the isNeedMeter to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithIsNeedMeter(isNeedMeter []int64) *PricingManagerDescribePublicAttributesParams {
	o.SetIsNeedMeter(isNeedMeter)
	return o
}

// SetIsNeedMeter adds the isNeedMeter to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetIsNeedMeter(isNeedMeter []int64) {
	o.IsNeedMeter = isNeedMeter
}

// WithLimit adds the limit to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithLimit(limit *string) *PricingManagerDescribePublicAttributesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetLimit(limit *string) {
	o.Limit = limit
}

// WithName adds the name to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithName(name []string) *PricingManagerDescribePublicAttributesParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetName(name []string) {
	o.Name = name
}

// WithOffset adds the offset to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithOffset(offset *string) *PricingManagerDescribePublicAttributesParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetOffset(offset *string) {
	o.Offset = offset
}

// WithPublicAttrID adds the publicAttrID to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithPublicAttrID(publicAttrID []string) *PricingManagerDescribePublicAttributesParams {
	o.SetPublicAttrID(publicAttrID)
	return o
}

// SetPublicAttrID adds the publicAttrId to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetPublicAttrID(publicAttrID []string) {
	o.PublicAttrID = publicAttrID
}

// WithReverse adds the reverse to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithReverse(reverse *bool) *PricingManagerDescribePublicAttributesParams {
	o.SetReverse(reverse)
	return o
}

// SetReverse adds the reverse to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetReverse(reverse *bool) {
	o.Reverse = reverse
}

// WithSearchWord adds the searchWord to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithSearchWord(searchWord *string) *PricingManagerDescribePublicAttributesParams {
	o.SetSearchWord(searchWord)
	return o
}

// SetSearchWord adds the searchWord to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetSearchWord(searchWord *string) {
	o.SearchWord = searchWord
}

// WithSortKey adds the sortKey to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithSortKey(sortKey *string) *PricingManagerDescribePublicAttributesParams {
	o.SetSortKey(sortKey)
	return o
}

// SetSortKey adds the sortKey to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetSortKey(sortKey *string) {
	o.SortKey = sortKey
}

// WithUnit adds the unit to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithUnit(unit []string) *PricingManagerDescribePublicAttributesParams {
	o.SetUnit(unit)
	return o
}

// SetUnit adds the unit to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetUnit(unit []string) {
	o.Unit = unit
}

// WithValueType adds the valueType to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) WithValueType(valueType []string) *PricingManagerDescribePublicAttributesParams {
	o.SetValueType(valueType)
	return o
}

// SetValueType adds the valueType to the pricing manager describe public attributes params
func (o *PricingManagerDescribePublicAttributesParams) SetValueType(valueType []string) {
	o.ValueType = valueType
}

// WriteToRequest writes these params to a swagger request
func (o *PricingManagerDescribePublicAttributesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BillingMode != nil {

		// binding items for billing_mode
		joinedBillingMode := o.bindParamBillingMode(reg)

		// query array param billing_mode
		if err := r.SetQueryParam("billing_mode", joinedBillingMode...); err != nil {
			return err
		}
	}

	if o.Description != nil {

		// binding items for description
		joinedDescription := o.bindParamDescription(reg)

		// query array param description
		if err := r.SetQueryParam("description", joinedDescription...); err != nil {
			return err
		}
	}

	if o.IsNeedMeter != nil {

		// binding items for is_need_meter
		joinedIsNeedMeter := o.bindParamIsNeedMeter(reg)

		// query array param is_need_meter
		if err := r.SetQueryParam("is_need_meter", joinedIsNeedMeter...); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit string

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := qrLimit
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// binding items for name
		joinedName := o.bindParamName(reg)

		// query array param name
		if err := r.SetQueryParam("name", joinedName...); err != nil {
			return err
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset string

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := qrOffset
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.PublicAttrID != nil {

		// binding items for public_attr_id
		joinedPublicAttrID := o.bindParamPublicAttrID(reg)

		// query array param public_attr_id
		if err := r.SetQueryParam("public_attr_id", joinedPublicAttrID...); err != nil {
			return err
		}
	}

	if o.Reverse != nil {

		// query param reverse
		var qrReverse bool

		if o.Reverse != nil {
			qrReverse = *o.Reverse
		}
		qReverse := swag.FormatBool(qrReverse)
		if qReverse != "" {

			if err := r.SetQueryParam("reverse", qReverse); err != nil {
				return err
			}
		}
	}

	if o.SearchWord != nil {

		// query param search_word
		var qrSearchWord string

		if o.SearchWord != nil {
			qrSearchWord = *o.SearchWord
		}
		qSearchWord := qrSearchWord
		if qSearchWord != "" {

			if err := r.SetQueryParam("search_word", qSearchWord); err != nil {
				return err
			}
		}
	}

	if o.SortKey != nil {

		// query param sort_key
		var qrSortKey string

		if o.SortKey != nil {
			qrSortKey = *o.SortKey
		}
		qSortKey := qrSortKey
		if qSortKey != "" {

			if err := r.SetQueryParam("sort_key", qSortKey); err != nil {
				return err
			}
		}
	}

	if o.Unit != nil {

		// binding items for unit
		joinedUnit := o.bindParamUnit(reg)

		// query array param unit
		if err := r.SetQueryParam("unit", joinedUnit...); err != nil {
			return err
		}
	}

	if o.ValueType != nil {

		// binding items for value_type
		joinedValueType := o.bindParamValueType(reg)

		// query array param value_type
		if err := r.SetQueryParam("value_type", joinedValueType...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter billing_mode
func (o *PricingManagerDescribePublicAttributesParams) bindParamBillingMode(formats strfmt.Registry) []string {
	billingModeIR := o.BillingMode

	var billingModeIC []string
	for _, billingModeIIR := range billingModeIR { // explode []string

		billingModeIIV := billingModeIIR // string as string
		billingModeIC = append(billingModeIC, billingModeIIV)
	}

	// items.CollectionFormat: "multi"
	billingModeIS := swag.JoinByFormat(billingModeIC, "multi")

	return billingModeIS
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter description
func (o *PricingManagerDescribePublicAttributesParams) bindParamDescription(formats strfmt.Registry) []string {
	descriptionIR := o.Description

	var descriptionIC []string
	for _, descriptionIIR := range descriptionIR { // explode []string

		descriptionIIV := descriptionIIR // string as string
		descriptionIC = append(descriptionIC, descriptionIIV)
	}

	// items.CollectionFormat: "multi"
	descriptionIS := swag.JoinByFormat(descriptionIC, "multi")

	return descriptionIS
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter is_need_meter
func (o *PricingManagerDescribePublicAttributesParams) bindParamIsNeedMeter(formats strfmt.Registry) []string {
	isNeedMeterIR := o.IsNeedMeter

	var isNeedMeterIC []string
	for _, isNeedMeterIIR := range isNeedMeterIR { // explode []int64

		isNeedMeterIIV := swag.FormatInt64(isNeedMeterIIR) // int64 as string
		isNeedMeterIC = append(isNeedMeterIC, isNeedMeterIIV)
	}

	// items.CollectionFormat: "multi"
	isNeedMeterIS := swag.JoinByFormat(isNeedMeterIC, "multi")

	return isNeedMeterIS
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter name
func (o *PricingManagerDescribePublicAttributesParams) bindParamName(formats strfmt.Registry) []string {
	nameIR := o.Name

	var nameIC []string
	for _, nameIIR := range nameIR { // explode []string

		nameIIV := nameIIR // string as string
		nameIC = append(nameIC, nameIIV)
	}

	// items.CollectionFormat: "multi"
	nameIS := swag.JoinByFormat(nameIC, "multi")

	return nameIS
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter public_attr_id
func (o *PricingManagerDescribePublicAttributesParams) bindParamPublicAttrID(formats strfmt.Registry) []string {
	publicAttrIDIR := o.PublicAttrID

	var publicAttrIDIC []string
	for _, publicAttrIDIIR := range publicAttrIDIR { // explode []string

		publicAttrIDIIV := publicAttrIDIIR // string as string
		publicAttrIDIC = append(publicAttrIDIC, publicAttrIDIIV)
	}

	// items.CollectionFormat: "multi"
	publicAttrIDIS := swag.JoinByFormat(publicAttrIDIC, "multi")

	return publicAttrIDIS
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter unit
func (o *PricingManagerDescribePublicAttributesParams) bindParamUnit(formats strfmt.Registry) []string {
	unitIR := o.Unit

	var unitIC []string
	for _, unitIIR := range unitIR { // explode []string

		unitIIV := unitIIR // string as string
		unitIC = append(unitIC, unitIIV)
	}

	// items.CollectionFormat: "multi"
	unitIS := swag.JoinByFormat(unitIC, "multi")

	return unitIS
}

// bindParamPricingManagerDescribePublicAttributes binds the parameter value_type
func (o *PricingManagerDescribePublicAttributesParams) bindParamValueType(formats strfmt.Registry) []string {
	valueTypeIR := o.ValueType

	var valueTypeIC []string
	for _, valueTypeIIR := range valueTypeIR { // explode []string

		valueTypeIIV := valueTypeIIR // string as string
		valueTypeIC = append(valueTypeIC, valueTypeIIV)
	}

	// items.CollectionFormat: "multi"
	valueTypeIS := swag.JoinByFormat(valueTypeIC, "multi")

	return valueTypeIS
}
