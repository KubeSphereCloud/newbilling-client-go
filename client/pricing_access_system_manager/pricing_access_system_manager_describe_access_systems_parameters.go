// Code generated by go-swagger; DO NOT EDIT.

package pricing_access_system_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPricingAccessSystemManagerDescribeAccessSystemsParams creates a new PricingAccessSystemManagerDescribeAccessSystemsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPricingAccessSystemManagerDescribeAccessSystemsParams() *PricingAccessSystemManagerDescribeAccessSystemsParams {
	return &PricingAccessSystemManagerDescribeAccessSystemsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPricingAccessSystemManagerDescribeAccessSystemsParamsWithTimeout creates a new PricingAccessSystemManagerDescribeAccessSystemsParams object
// with the ability to set a timeout on a request.
func NewPricingAccessSystemManagerDescribeAccessSystemsParamsWithTimeout(timeout time.Duration) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	return &PricingAccessSystemManagerDescribeAccessSystemsParams{
		timeout: timeout,
	}
}

// NewPricingAccessSystemManagerDescribeAccessSystemsParamsWithContext creates a new PricingAccessSystemManagerDescribeAccessSystemsParams object
// with the ability to set a context for a request.
func NewPricingAccessSystemManagerDescribeAccessSystemsParamsWithContext(ctx context.Context) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	return &PricingAccessSystemManagerDescribeAccessSystemsParams{
		Context: ctx,
	}
}

// NewPricingAccessSystemManagerDescribeAccessSystemsParamsWithHTTPClient creates a new PricingAccessSystemManagerDescribeAccessSystemsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPricingAccessSystemManagerDescribeAccessSystemsParamsWithHTTPClient(client *http.Client) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	return &PricingAccessSystemManagerDescribeAccessSystemsParams{
		HTTPClient: client,
	}
}

/*
PricingAccessSystemManagerDescribeAccessSystemsParams contains all the parameters to send to the API endpoint

	for the pricing access system manager describe access systems operation.

	Typically these are written to a http.Request.
*/
type PricingAccessSystemManagerDescribeAccessSystemsParams struct {

	/* AccessSysCode.

	   接入系统编码.
	*/
	AccessSysCode []string

	/* AccessSysID.

	   接入系统ID.
	*/
	AccessSysID []string

	/* Limit.

	   数据库查询每页大小  - 默认 20, 最大值 200.

	   Format: uint64
	*/
	Limit *string

	/* Name.

	   接入系统名称.
	*/
	Name []string

	/* Offset.

	   数据库查询偏移位置  - 默认 0.

	   Format: uint64
	*/
	Offset *string

	/* Reverse.

	   是否倒序排序  - value = 0 sort ASC, value = 1 sort DESC.
	*/
	Reverse *bool

	/* SearchWord.

	   模糊查询关键字  - 支持字段：toadd.
	*/
	SearchWord *string

	/* SortKey.

	   排序字段  - 默认 create_time.
	*/
	SortKey *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pricing access system manager describe access systems params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithDefaults() *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pricing access system manager describe access systems params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithTimeout(timeout time.Duration) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithContext(ctx context.Context) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithHTTPClient(client *http.Client) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessSysCode adds the accessSysCode to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithAccessSysCode(accessSysCode []string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetAccessSysCode(accessSysCode)
	return o
}

// SetAccessSysCode adds the accessSysCode to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetAccessSysCode(accessSysCode []string) {
	o.AccessSysCode = accessSysCode
}

// WithAccessSysID adds the accessSysID to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithAccessSysID(accessSysID []string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetAccessSysID(accessSysID)
	return o
}

// SetAccessSysID adds the accessSysId to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetAccessSysID(accessSysID []string) {
	o.AccessSysID = accessSysID
}

// WithLimit adds the limit to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithLimit(limit *string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetLimit(limit *string) {
	o.Limit = limit
}

// WithName adds the name to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithName(name []string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetName(name []string) {
	o.Name = name
}

// WithOffset adds the offset to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithOffset(offset *string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetOffset(offset *string) {
	o.Offset = offset
}

// WithReverse adds the reverse to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithReverse(reverse *bool) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetReverse(reverse)
	return o
}

// SetReverse adds the reverse to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetReverse(reverse *bool) {
	o.Reverse = reverse
}

// WithSearchWord adds the searchWord to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithSearchWord(searchWord *string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetSearchWord(searchWord)
	return o
}

// SetSearchWord adds the searchWord to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetSearchWord(searchWord *string) {
	o.SearchWord = searchWord
}

// WithSortKey adds the sortKey to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WithSortKey(sortKey *string) *PricingAccessSystemManagerDescribeAccessSystemsParams {
	o.SetSortKey(sortKey)
	return o
}

// SetSortKey adds the sortKey to the pricing access system manager describe access systems params
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) SetSortKey(sortKey *string) {
	o.SortKey = sortKey
}

// WriteToRequest writes these params to a swagger request
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessSysCode != nil {

		// binding items for access_sys_code
		joinedAccessSysCode := o.bindParamAccessSysCode(reg)

		// query array param access_sys_code
		if err := r.SetQueryParam("access_sys_code", joinedAccessSysCode...); err != nil {
			return err
		}
	}

	if o.AccessSysID != nil {

		// binding items for access_sys_id
		joinedAccessSysID := o.bindParamAccessSysID(reg)

		// query array param access_sys_id
		if err := r.SetQueryParam("access_sys_id", joinedAccessSysID...); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit string

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := qrLimit
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// binding items for name
		joinedName := o.bindParamName(reg)

		// query array param name
		if err := r.SetQueryParam("name", joinedName...); err != nil {
			return err
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset string

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := qrOffset
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Reverse != nil {

		// query param reverse
		var qrReverse bool

		if o.Reverse != nil {
			qrReverse = *o.Reverse
		}
		qReverse := swag.FormatBool(qrReverse)
		if qReverse != "" {

			if err := r.SetQueryParam("reverse", qReverse); err != nil {
				return err
			}
		}
	}

	if o.SearchWord != nil {

		// query param search_word
		var qrSearchWord string

		if o.SearchWord != nil {
			qrSearchWord = *o.SearchWord
		}
		qSearchWord := qrSearchWord
		if qSearchWord != "" {

			if err := r.SetQueryParam("search_word", qSearchWord); err != nil {
				return err
			}
		}
	}

	if o.SortKey != nil {

		// query param sort_key
		var qrSortKey string

		if o.SortKey != nil {
			qrSortKey = *o.SortKey
		}
		qSortKey := qrSortKey
		if qSortKey != "" {

			if err := r.SetQueryParam("sort_key", qSortKey); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPricingAccessSystemManagerDescribeAccessSystems binds the parameter access_sys_code
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) bindParamAccessSysCode(formats strfmt.Registry) []string {
	accessSysCodeIR := o.AccessSysCode

	var accessSysCodeIC []string
	for _, accessSysCodeIIR := range accessSysCodeIR { // explode []string

		accessSysCodeIIV := accessSysCodeIIR // string as string
		accessSysCodeIC = append(accessSysCodeIC, accessSysCodeIIV)
	}

	// items.CollectionFormat: "multi"
	accessSysCodeIS := swag.JoinByFormat(accessSysCodeIC, "multi")

	return accessSysCodeIS
}

// bindParamPricingAccessSystemManagerDescribeAccessSystems binds the parameter access_sys_id
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) bindParamAccessSysID(formats strfmt.Registry) []string {
	accessSysIDIR := o.AccessSysID

	var accessSysIDIC []string
	for _, accessSysIDIIR := range accessSysIDIR { // explode []string

		accessSysIDIIV := accessSysIDIIR // string as string
		accessSysIDIC = append(accessSysIDIC, accessSysIDIIV)
	}

	// items.CollectionFormat: "multi"
	accessSysIDIS := swag.JoinByFormat(accessSysIDIC, "multi")

	return accessSysIDIS
}

// bindParamPricingAccessSystemManagerDescribeAccessSystems binds the parameter name
func (o *PricingAccessSystemManagerDescribeAccessSystemsParams) bindParamName(formats strfmt.Registry) []string {
	nameIR := o.Name

	var nameIC []string
	for _, nameIIR := range nameIR { // explode []string

		nameIIV := nameIIR // string as string
		nameIC = append(nameIC, nameIIV)
	}

	// items.CollectionFormat: "multi"
	nameIS := swag.JoinByFormat(nameIC, "multi")

	return nameIS
}
