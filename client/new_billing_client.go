// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/newbilling-client-go/client/charging_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/collect_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/customer_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/discount_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/iam_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/iam_manager4_appcenter"
	"github.com/KubeSphereCloud/newbilling-client-go/client/notifier"
	"github.com/KubeSphereCloud/newbilling-client-go/client/payment"
	"github.com/KubeSphereCloud/newbilling-client-go/client/pricing_access_system_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/pricing_cost_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/pricing_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/service_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/subscription_billing_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/subscription_order_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/subscription_package_order_manager"
	"github.com/KubeSphereCloud/newbilling-client-go/client/subscription_prod_instance_manager"
)

// Default new billing HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http", "https"}

// NewHTTPClient creates a new new billing HTTP client.
func NewHTTPClient(formats strfmt.Registry) *NewBilling {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new new billing HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *NewBilling {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new new billing client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *NewBilling {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(NewBilling)
	cli.Transport = transport
	cli.ChargingManager = charging_manager.New(transport, formats)
	cli.CollectManager = collect_manager.New(transport, formats)
	cli.CustomerManager = customer_manager.New(transport, formats)
	cli.DiscountManager = discount_manager.New(transport, formats)
	cli.IamManager = iam_manager.New(transport, formats)
	cli.IamManager4Appcenter = iam_manager4_appcenter.New(transport, formats)
	cli.Notifier = notifier.New(transport, formats)
	cli.Payment = payment.New(transport, formats)
	cli.PricingAccessSystemManager = pricing_access_system_manager.New(transport, formats)
	cli.PricingCostManager = pricing_cost_manager.New(transport, formats)
	cli.PricingManager = pricing_manager.New(transport, formats)
	cli.ServiceManager = service_manager.New(transport, formats)
	cli.SubscriptionBillingManager = subscription_billing_manager.New(transport, formats)
	cli.SubscriptionOrderManager = subscription_order_manager.New(transport, formats)
	cli.SubscriptionPackageOrderManager = subscription_package_order_manager.New(transport, formats)
	cli.SubscriptionProdInstanceManager = subscription_prod_instance_manager.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// NewBilling is a client for new billing
type NewBilling struct {
	ChargingManager charging_manager.ClientService

	CollectManager collect_manager.ClientService

	CustomerManager customer_manager.ClientService

	DiscountManager discount_manager.ClientService

	IamManager iam_manager.ClientService

	IamManager4Appcenter iam_manager4_appcenter.ClientService

	Notifier notifier.ClientService

	Payment payment.ClientService

	PricingAccessSystemManager pricing_access_system_manager.ClientService

	PricingCostManager pricing_cost_manager.ClientService

	PricingManager pricing_manager.ClientService

	ServiceManager service_manager.ClientService

	SubscriptionBillingManager subscription_billing_manager.ClientService

	SubscriptionOrderManager subscription_order_manager.ClientService

	SubscriptionPackageOrderManager subscription_package_order_manager.ClientService

	SubscriptionProdInstanceManager subscription_prod_instance_manager.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *NewBilling) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.ChargingManager.SetTransport(transport)
	c.CollectManager.SetTransport(transport)
	c.CustomerManager.SetTransport(transport)
	c.DiscountManager.SetTransport(transport)
	c.IamManager.SetTransport(transport)
	c.IamManager4Appcenter.SetTransport(transport)
	c.Notifier.SetTransport(transport)
	c.Payment.SetTransport(transport)
	c.PricingAccessSystemManager.SetTransport(transport)
	c.PricingCostManager.SetTransport(transport)
	c.PricingManager.SetTransport(transport)
	c.ServiceManager.SetTransport(transport)
	c.SubscriptionBillingManager.SetTransport(transport)
	c.SubscriptionOrderManager.SetTransport(transport)
	c.SubscriptionPackageOrderManager.SetTransport(transport)
	c.SubscriptionProdInstanceManager.SetTransport(transport)
}
