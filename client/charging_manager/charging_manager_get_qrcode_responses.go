// Code generated by go-swagger; DO NOT EDIT.

package charging_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/newbilling-client-go/models"
)

// ChargingManagerGetQrcodeReader is a Reader for the ChargingManagerGetQrcode structure.
type ChargingManagerGetQrcodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChargingManagerGetQrcodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChargingManagerGetQrcodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewChargingManagerGetQrcodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewChargingManagerGetQrcodeOK creates a ChargingManagerGetQrcodeOK with default headers values
func NewChargingManagerGetQrcodeOK() *ChargingManagerGetQrcodeOK {
	return &ChargingManagerGetQrcodeOK{}
}

/*
ChargingManagerGetQrcodeOK describes a response with status code 200, with default header values.

A successful response.
*/
type ChargingManagerGetQrcodeOK struct {
	Payload *models.NewbillingGetQrcodeResponse
}

// IsSuccess returns true when this charging manager get qrcode o k response has a 2xx status code
func (o *ChargingManagerGetQrcodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this charging manager get qrcode o k response has a 3xx status code
func (o *ChargingManagerGetQrcodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this charging manager get qrcode o k response has a 4xx status code
func (o *ChargingManagerGetQrcodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this charging manager get qrcode o k response has a 5xx status code
func (o *ChargingManagerGetQrcodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this charging manager get qrcode o k response a status code equal to that given
func (o *ChargingManagerGetQrcodeOK) IsCode(code int) bool {
	return code == 200
}

func (o *ChargingManagerGetQrcodeOK) Error() string {
	return fmt.Sprintf("[GET /v1/qrcode][%d] chargingManagerGetQrcodeOK  %+v", 200, o.Payload)
}

func (o *ChargingManagerGetQrcodeOK) String() string {
	return fmt.Sprintf("[GET /v1/qrcode][%d] chargingManagerGetQrcodeOK  %+v", 200, o.Payload)
}

func (o *ChargingManagerGetQrcodeOK) GetPayload() *models.NewbillingGetQrcodeResponse {
	return o.Payload
}

func (o *ChargingManagerGetQrcodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NewbillingGetQrcodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChargingManagerGetQrcodeDefault creates a ChargingManagerGetQrcodeDefault with default headers values
func NewChargingManagerGetQrcodeDefault(code int) *ChargingManagerGetQrcodeDefault {
	return &ChargingManagerGetQrcodeDefault{
		_statusCode: code,
	}
}

/*
ChargingManagerGetQrcodeDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type ChargingManagerGetQrcodeDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the charging manager get qrcode default response
func (o *ChargingManagerGetQrcodeDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this charging manager get qrcode default response has a 2xx status code
func (o *ChargingManagerGetQrcodeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this charging manager get qrcode default response has a 3xx status code
func (o *ChargingManagerGetQrcodeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this charging manager get qrcode default response has a 4xx status code
func (o *ChargingManagerGetQrcodeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this charging manager get qrcode default response has a 5xx status code
func (o *ChargingManagerGetQrcodeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this charging manager get qrcode default response a status code equal to that given
func (o *ChargingManagerGetQrcodeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ChargingManagerGetQrcodeDefault) Error() string {
	return fmt.Sprintf("[GET /v1/qrcode][%d] ChargingManager_GetQrcode default  %+v", o._statusCode, o.Payload)
}

func (o *ChargingManagerGetQrcodeDefault) String() string {
	return fmt.Sprintf("[GET /v1/qrcode][%d] ChargingManager_GetQrcode default  %+v", o._statusCode, o.Payload)
}

func (o *ChargingManagerGetQrcodeDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *ChargingManagerGetQrcodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
