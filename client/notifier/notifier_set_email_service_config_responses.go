// Code generated by go-swagger; DO NOT EDIT.

package notifier

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/newbilling-client-go/models"
)

// NotifierSetEmailServiceConfigReader is a Reader for the NotifierSetEmailServiceConfig structure.
type NotifierSetEmailServiceConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotifierSetEmailServiceConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotifierSetEmailServiceConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNotifierSetEmailServiceConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNotifierSetEmailServiceConfigOK creates a NotifierSetEmailServiceConfigOK with default headers values
func NewNotifierSetEmailServiceConfigOK() *NotifierSetEmailServiceConfigOK {
	return &NotifierSetEmailServiceConfigOK{}
}

/*
NotifierSetEmailServiceConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type NotifierSetEmailServiceConfigOK struct {
	Payload *models.NewbillingSetEmailServiceConfigResponse
}

// IsSuccess returns true when this notifier set email service config o k response has a 2xx status code
func (o *NotifierSetEmailServiceConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notifier set email service config o k response has a 3xx status code
func (o *NotifierSetEmailServiceConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifier set email service config o k response has a 4xx status code
func (o *NotifierSetEmailServiceConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notifier set email service config o k response has a 5xx status code
func (o *NotifierSetEmailServiceConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notifier set email service config o k response a status code equal to that given
func (o *NotifierSetEmailServiceConfigOK) IsCode(code int) bool {
	return code == 200
}

func (o *NotifierSetEmailServiceConfigOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/emailserviceconfig][%d] notifierSetEmailServiceConfigOK  %+v", 200, o.Payload)
}

func (o *NotifierSetEmailServiceConfigOK) String() string {
	return fmt.Sprintf("[PATCH /v1/emailserviceconfig][%d] notifierSetEmailServiceConfigOK  %+v", 200, o.Payload)
}

func (o *NotifierSetEmailServiceConfigOK) GetPayload() *models.NewbillingSetEmailServiceConfigResponse {
	return o.Payload
}

func (o *NotifierSetEmailServiceConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NewbillingSetEmailServiceConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotifierSetEmailServiceConfigDefault creates a NotifierSetEmailServiceConfigDefault with default headers values
func NewNotifierSetEmailServiceConfigDefault(code int) *NotifierSetEmailServiceConfigDefault {
	return &NotifierSetEmailServiceConfigDefault{
		_statusCode: code,
	}
}

/*
NotifierSetEmailServiceConfigDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type NotifierSetEmailServiceConfigDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the notifier set email service config default response
func (o *NotifierSetEmailServiceConfigDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this notifier set email service config default response has a 2xx status code
func (o *NotifierSetEmailServiceConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this notifier set email service config default response has a 3xx status code
func (o *NotifierSetEmailServiceConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this notifier set email service config default response has a 4xx status code
func (o *NotifierSetEmailServiceConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this notifier set email service config default response has a 5xx status code
func (o *NotifierSetEmailServiceConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this notifier set email service config default response a status code equal to that given
func (o *NotifierSetEmailServiceConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *NotifierSetEmailServiceConfigDefault) Error() string {
	return fmt.Sprintf("[PATCH /v1/emailserviceconfig][%d] Notifier_SetEmailServiceConfig default  %+v", o._statusCode, o.Payload)
}

func (o *NotifierSetEmailServiceConfigDefault) String() string {
	return fmt.Sprintf("[PATCH /v1/emailserviceconfig][%d] Notifier_SetEmailServiceConfig default  %+v", o._statusCode, o.Payload)
}

func (o *NotifierSetEmailServiceConfigDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *NotifierSetEmailServiceConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
