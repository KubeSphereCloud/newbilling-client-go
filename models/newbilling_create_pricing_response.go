// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewbillingCreatePricingResponse newbilling create pricing response
//
// swagger:model newbillingCreatePricingResponse
type NewbillingCreatePricingResponse struct {

	// attr ids
	AttrIds []*NewbillingAttrID `json:"attr_ids"`

	// cata id
	CataID string `json:"cata_id,omitempty"`

	// comp ids
	CompIds []*NewbillingCompID `json:"comp_ids"`

	// plan id
	PlanID string `json:"plan_id,omitempty"`

	// prod id
	ProdID string `json:"prod_id,omitempty"`

	// pub attr filter ids
	PubAttrFilterIds []*NewbillingPubAttrFilterID `json:"pub_attr_filter_ids"`
}

// Validate validates this newbilling create pricing response
func (m *NewbillingCreatePricingResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttrIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCompIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePubAttrFilterIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingCreatePricingResponse) validateAttrIds(formats strfmt.Registry) error {
	if swag.IsZero(m.AttrIds) { // not required
		return nil
	}

	for i := 0; i < len(m.AttrIds); i++ {
		if swag.IsZero(m.AttrIds[i]) { // not required
			continue
		}

		if m.AttrIds[i] != nil {
			if err := m.AttrIds[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("attr_ids" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("attr_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *NewbillingCreatePricingResponse) validateCompIds(formats strfmt.Registry) error {
	if swag.IsZero(m.CompIds) { // not required
		return nil
	}

	for i := 0; i < len(m.CompIds); i++ {
		if swag.IsZero(m.CompIds[i]) { // not required
			continue
		}

		if m.CompIds[i] != nil {
			if err := m.CompIds[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("comp_ids" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("comp_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *NewbillingCreatePricingResponse) validatePubAttrFilterIds(formats strfmt.Registry) error {
	if swag.IsZero(m.PubAttrFilterIds) { // not required
		return nil
	}

	for i := 0; i < len(m.PubAttrFilterIds); i++ {
		if swag.IsZero(m.PubAttrFilterIds[i]) { // not required
			continue
		}

		if m.PubAttrFilterIds[i] != nil {
			if err := m.PubAttrFilterIds[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("pub_attr_filter_ids" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("pub_attr_filter_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this newbilling create pricing response based on the context it is used
func (m *NewbillingCreatePricingResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAttrIds(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCompIds(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePubAttrFilterIds(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingCreatePricingResponse) contextValidateAttrIds(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AttrIds); i++ {

		if m.AttrIds[i] != nil {
			if err := m.AttrIds[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("attr_ids" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("attr_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *NewbillingCreatePricingResponse) contextValidateCompIds(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.CompIds); i++ {

		if m.CompIds[i] != nil {
			if err := m.CompIds[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("comp_ids" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("comp_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *NewbillingCreatePricingResponse) contextValidatePubAttrFilterIds(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.PubAttrFilterIds); i++ {

		if m.PubAttrFilterIds[i] != nil {
			if err := m.PubAttrFilterIds[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("pub_attr_filter_ids" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("pub_attr_filter_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewbillingCreatePricingResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewbillingCreatePricingResponse) UnmarshalBinary(b []byte) error {
	var res NewbillingCreatePricingResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
