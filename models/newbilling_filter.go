// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewbillingFilter 条件
//
// swagger:model newbillingFilter
type NewbillingFilter struct {

	// 创建时间
	// Format: date-time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// 条件描述
	Description string `json:"description,omitempty"`

	// 条件编码
	FilterCode string `json:"filter_code,omitempty"`

	// 条件ID
	FilterID string `json:"filter_id,omitempty"`

	// 条件左值
	LeftValue string `json:"left_value,omitempty"`

	// 条件名称
	Name string `json:"name,omitempty"`

	// 条件操作符
	Operator string `json:"operator,omitempty"`

	// 产品ID
	ProdID string `json:"prod_id,omitempty"`

	// 条件备注
	Remark string `json:"remark,omitempty"`

	// 条件右值
	RightValue string `json:"right_value,omitempty"`

	// 更新时间
	// Format: date-time
	UpdateTime strfmt.DateTime `json:"update_time,omitempty"`
}

// Validate validates this newbilling filter
func (m *NewbillingFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingFilter) validateCreateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.CreateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("create_time", "body", "date-time", m.CreateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewbillingFilter) validateUpdateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("update_time", "body", "date-time", m.UpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this newbilling filter based on context it is used
func (m *NewbillingFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NewbillingFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewbillingFilter) UnmarshalBinary(b []byte) error {
	var res NewbillingFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
