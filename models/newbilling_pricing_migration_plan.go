// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewbillingPricingMigrationPlan newbilling pricing migration plan
//
// swagger:model newbillingPricingMigrationPlan
type NewbillingPricingMigrationPlan struct {

	// 接入系统ID
	AccessSysID string `json:"access_sys_id,omitempty"`

	// 计费项说明
	Description string `json:"description,omitempty"`

	// 计费项Code
	PlanCode string `json:"plan_code,omitempty"`

	// 计费项ID
	PlanID string `json:"plan_id,omitempty"`

	// 计费项名称
	PlanName string `json:"plan_name,omitempty"`

	// pricing method
	PricingMethod string `json:"pricing_method,omitempty"`

	// 产品ID
	ProdID string `json:"prod_id,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// status time
	// Format: date-time
	StatusTime strfmt.DateTime `json:"status_time,omitempty"`
}

// Validate validates this newbilling pricing migration plan
func (m *NewbillingPricingMigrationPlan) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatusTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingPricingMigrationPlan) validateStatusTime(formats strfmt.Registry) error {
	if swag.IsZero(m.StatusTime) { // not required
		return nil
	}

	if err := validate.FormatOf("status_time", "body", "date-time", m.StatusTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this newbilling pricing migration plan based on context it is used
func (m *NewbillingPricingMigrationPlan) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NewbillingPricingMigrationPlan) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewbillingPricingMigrationPlan) UnmarshalBinary(b []byte) error {
	var res NewbillingPricingMigrationPlan
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
