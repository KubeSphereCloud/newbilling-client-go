// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewbillingComponent 计费项
//
// swagger:model newbillingComponent
type NewbillingComponent struct {

	// 计费模式 - 按包-按资源包；按包-按时间包；按量-按时间使用量；按量-按资源使用量
	BillingMode string `json:"billing_mode,omitempty"`

	// 计费项编码
	CompCode string `json:"comp_code,omitempty"`

	// 计费项ID
	CompID string `json:"comp_id,omitempty"`

	// 创建时间
	// Format: date-time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// 计费项描述
	Description string `json:"description,omitempty"`

	// 关联的计费项id
	MappingCompID string `json:"mapping_comp_id,omitempty"`

	// 关联的计费项名称
	MappingName string `json:"mapping_name,omitempty"`

	// 计费项名称
	Name string `json:"name,omitempty"`

	// 方案ID
	PlanID string `json:"plan_id,omitempty"`

	// 计费项position
	Position int64 `json:"position,omitempty"`

	// 产品ID
	ProdID string `json:"prod_id,omitempty"`

	// 资源包类型
	ResourcePkgType string `json:"resource_pkg_type,omitempty"`

	// 更新时间
	// Format: date-time
	UpdateTime strfmt.DateTime `json:"update_time,omitempty"`
}

// Validate validates this newbilling component
func (m *NewbillingComponent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingComponent) validateCreateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.CreateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("create_time", "body", "date-time", m.CreateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewbillingComponent) validateUpdateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("update_time", "body", "date-time", m.UpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this newbilling component based on context it is used
func (m *NewbillingComponent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NewbillingComponent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewbillingComponent) UnmarshalBinary(b []byte) error {
	var res NewbillingComponent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
