// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewbillingCreateChargeRequest 创建支付记录请求信息
//
// swagger:model newbillingCreateChargeRequest
type NewbillingCreateChargeRequest struct {

	// 接入系统ID
	AccessSysID string `json:"access_sys_id,omitempty"`

	// 账单ID
	BillID string `json:"bill_id,omitempty"`

	// 支付金额
	ChargeAmount float32 `json:"charge_amount,omitempty"`

	// 支付渠道- 余额、直付、外部
	ChargeChannel string `json:"charge_channel,omitempty"`

	// charge type
	ChargeType int32 `json:"charge_type,omitempty"`

	// 支付记录创建人
	CreatedBy string `json:"created_by,omitempty"`

	// 支付货币单位
	CurrencyCode string `json:"currency_code,omitempty"`

	// extra info
	ExtraInfo string `json:"extra_info,omitempty"`

	// is change
	IsChange bool `json:"is_change,omitempty"`

	// 是否强制扣费，强制扣费会扣除账户余额为负数
	IsForce bool `json:"is_force,omitempty"`

	// 是否由pitrix-billing-order的订单触发
	IsOrderResource bool `json:"is_order_resource,omitempty"`

	// prod inst id ext
	ProdInstIDExt string `json:"prod_inst_id_ext,omitempty"`

	// 备注
	Remarks string `json:"remarks,omitempty"`

	// 需要支付的账单
	ToChargedBills []*NewbillingBill `json:"to_charged_bills"`

	// 用户ID
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this newbilling create charge request
func (m *NewbillingCreateChargeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateToChargedBills(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingCreateChargeRequest) validateToChargedBills(formats strfmt.Registry) error {
	if swag.IsZero(m.ToChargedBills) { // not required
		return nil
	}

	for i := 0; i < len(m.ToChargedBills); i++ {
		if swag.IsZero(m.ToChargedBills[i]) { // not required
			continue
		}

		if m.ToChargedBills[i] != nil {
			if err := m.ToChargedBills[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("to_charged_bills" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("to_charged_bills" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this newbilling create charge request based on the context it is used
func (m *NewbillingCreateChargeRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateToChargedBills(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingCreateChargeRequest) contextValidateToChargedBills(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.ToChargedBills); i++ {

		if m.ToChargedBills[i] != nil {
			if err := m.ToChargedBills[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("to_charged_bills" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("to_charged_bills" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewbillingCreateChargeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewbillingCreateChargeRequest) UnmarshalBinary(b []byte) error {
	var res NewbillingCreateChargeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
