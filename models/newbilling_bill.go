// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewbillingBill 计费账单
//
// swagger:model newbillingBill
type NewbillingBill struct {

	// 接入系统ID
	AccessSysID string `json:"access_sys_id,omitempty"`

	// 账期
	AccountPeriod string `json:"account_period,omitempty"`

	// 应付金额
	AmountPayable float32 `json:"amount_payable,omitempty"`

	// 计费账单ID
	BillID string `json:"bill_id,omitempty"`

	// 计费模式
	BillingMode string `json:"billing_mode,omitempty"`

	// 计费任务ID
	BllJobID string `json:"bll_job_id,omitempty"`

	// 计费项编码
	CompCode string `json:"comp_code,omitempty"`

	// 计费项ID
	CompID string `json:"comp_id,omitempty"`

	// 计费项名称
	CompName string `json:"comp_name,omitempty"`

	// 原价
	Cost float32 `json:"cost,omitempty"`

	// 计费账单创建时间
	// Format: date-time
	CreateTime *strfmt.DateTime `json:"create_time,omitempty"`

	// 描述信息
	Description string `json:"description,omitempty"`

	// 折扣率
	Discount float32 `json:"discount,omitempty"`

	// 账单使用周期
	Duration string `json:"duration,omitempty"`

	// 计费结束时间
	// Format: date-time
	EndTime *strfmt.DateTime `json:"end_time,omitempty"`

	// 订单ID
	OrderID string `json:"order_id,omitempty"`

	// 订单用户ID
	OrderUserID string `json:"order_user_id,omitempty"`

	// 订单用户名称
	OrderUserName string `json:"order_user_name,omitempty"`

	// 产品编码
	ProdCode string `json:"prod_code,omitempty"`

	// 产品ID
	ProdID string `json:"prod_id,omitempty"`

	// 产品实例ID
	ProdInstID string `json:"prod_inst_id,omitempty"`

	// 外部产品实例ID
	ProdInstIDExt string `json:"prod_inst_id_ext,omitempty"`

	// 产品实例数量
	ProdInstNum int32 `json:"prod_inst_num,omitempty"`

	// 产品名称
	ProdName string `json:"prod_name,omitempty"`

	// 计费开始时间
	// Format: date-time
	StartTime *strfmt.DateTime `json:"start_time,omitempty"`

	// 状态
	Status string `json:"status,omitempty"`

	// 计费项订阅ID
	SubsComponentID string `json:"subs_component_id,omitempty"`

	// 计费账单更新时间
	// Format: date-time
	UpdateTime *strfmt.DateTime `json:"update_time,omitempty"`

	// 资源使用量
	Usages string `json:"usages,omitempty"`
}

// Validate validates this newbilling bill
func (m *NewbillingBill) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewbillingBill) validateCreateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.CreateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("create_time", "body", "date-time", m.CreateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewbillingBill) validateEndTime(formats strfmt.Registry) error {
	if swag.IsZero(m.EndTime) { // not required
		return nil
	}

	if err := validate.FormatOf("end_time", "body", "date-time", m.EndTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewbillingBill) validateStartTime(formats strfmt.Registry) error {
	if swag.IsZero(m.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("start_time", "body", "date-time", m.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewbillingBill) validateUpdateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("update_time", "body", "date-time", m.UpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this newbilling bill based on context it is used
func (m *NewbillingBill) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NewbillingBill) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewbillingBill) UnmarshalBinary(b []byte) error {
	var res NewbillingBill
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
